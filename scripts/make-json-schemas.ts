#!/usr/bin/env -S pnpm exec tsx

import { writeFileSync } from "node:fs"
import { resolve } from "node:path"
import * as TJS from "typescript-json-schema"
import * as prettier from "prettier"

async function main() {
  const root = resolve(__dirname, "..")

  const program = TJS.programFromConfig(resolve(root, "tsconfig.json"), [
    resolve(root, "src/SeatbeltConfig.ts"),
  ])

  const filepath = resolve(root, "src/jsonSchema/SeatbeltConfigSchema.ts")

  const schema = TJS.generateSchema(program, "SeatbeltConfig")
  const ts = `
// This file is generated by running ./scripts/make-json-schemas.ts

import type { Rule } from "eslint"
type Schema = Rule.RuleMetaData["schema"]

export const SeatbeltConfigSchema = ${JSON.stringify(schema, null, 2)} satisfies Schema
`
  const config = await prettier.resolveConfig(filepath)
  const formatted = await prettier.format(ts, { filepath, ...config })

  writeFileSync(filepath, formatted)
}

if (require.main === module) {
  main().catch((error) => {
    console.error(error)
    process.exit(1)
  })
}
